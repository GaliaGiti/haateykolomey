{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/testIndex.js","webpack:///./src/classes/brush.js","webpack:///./src/classes/board.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Brush","Board","drawingCanvas","document","getElementById","myBoard","console","log","myBrush","getCanvas","boardButtonReal","boardButtonFake","brushButtonReal","brushButtonFake","eraseButton","roomName","innerText","style","opacity","addEventListener","e","click","backgroundColor","target","setBrushColor","clientSocket","emit","eventTargetValue","on","brushColorChage","setBoardColor","boardColorChage","eraseButtonClickedInfo","myCanvas","getContext","clearRect","width","height","slideButton","canvas","voiceButton","slideContainer","my_pdf_viewer","drawingBoard","slideButtonClicked_props","canvasDisplay","boardButtonFakeDisplay","brushButtonFakeDisplay","eraseButtonDisplay","documentBackgroundColor","voiceButtonMarginTop","voiceButtonDisplay","slideContainerDisplay","slideButtonBackgroundColor","slideButtonColor","drawingBoardBackgroundColor","my_pdf_viewerDisplay","drawingBoardColor","changeProps_slideButtonClicked","display","body","marginTop","color","boardButtonClicked_props","eraseButtonMarginTop","changeprops_boardButtonClicked","window","enableEventListeners","mainDrawingLoop","isDrawingPossible","drawCircle","drawingInfo","currentX","currentY","getBrushColor","combainedDrawingInfo","currentColor","_updateBoardColor","getBoardColor","currentBoardColor","requestAnimationFrame","otherClientBoard","receivedBoardColorInfo","otherClientBrush","receivedDrawingInfo","brushSize","brushColor","brushType","this","newSize","newColor","x","y","ctx","beginPath","arc","Math","PI","strokeStyle","stroke","fillStyle","fill","boardWidth","boardHeight","boardColor","fitCanvasToParent","newBoardColor","parentElement","offsetWidth","offsetHeight","isMouseMoving","isMouseDown","decideIsDrawingPossible","offsetX","offsetY"],"mappings":"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","file":"brushBoard.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const Brush = require(\"./classes/brush\").Brush;\r\nconst Board = require(\"./classes/board\").Board;\r\n\r\nconst drawingCanvas = document.getElementById(\"canvas\");\r\nconst myBoard = new Board(drawingCanvas, 100, 200, \"white\");\r\n\r\nconsole.log(\"board created hoilo\");\r\nconst myBrush = new Brush(2, \"black\", \"kolom\", myBoard.getCanvas());\r\nconst boardButtonReal = document.getElementById(\"boardButtonReal\");\r\nconst boardButtonFake = document.getElementById(\"boardButtonFake\");\r\nconst brushButtonReal = document.getElementById(\"brushButtonReal\");\r\nconst brushButtonFake = document.getElementById(\"brushButtonFake\");\r\nvar eraseButton = document.getElementById(\"eraseButton\");\r\n\r\nvar roomName = document.getElementById('roomName').innerText\r\n\r\nbrushButtonReal.style.opacity = 0;\r\nbrushButtonFake.addEventListener(\"click\", (e) => {\r\n  brushButtonReal.click();\r\n});\r\n\r\nbrushButtonFake.addEventListener(\"change\", (e) => {\r\n  brushButtonFake.style.backgroundColor = e.target.value;\r\n\r\n  myBrush.setBrushColor(e.target.value);\r\n  clientSocket.emit(\"emitBrushColorChange\", {\r\n    eventTargetValue: e.target.value,\r\n    roomName\r\n  });\r\n});\r\n\r\nclientSocket.on(\"serverEmitBrushColorChange\", (brushColorChage) => {\r\n  brushButtonFake.style.backgroundColor = brushColorChage;\r\n\r\n  brushButtonFake.style.backgroundColor = brushColorChage;\r\n  myBrush.setBrushColor(brushColorChage);\r\n});\r\n\r\nboardButtonReal.style.opacity = 0;\r\nboardButtonFake.addEventListener(\"click\", () => {\r\n  boardButtonReal.click();\r\n});\r\n\r\nboardButtonFake.addEventListener(\"change\", (e) => {\r\n  boardButtonFake.style.backgroundColor = e.target.value;\r\n  myBoard.setBoardColor(e.target.value);\r\n  clientSocket.emit(\"emitBoardColorChange\", {\r\n    eventTargetValue: e.target.value,\r\n    roomName\r\n  });\r\n});\r\n\r\nclientSocket.on(\"serverEmitBoardColorChange\", (boardColorChage) => {\r\n  boardButtonFake.style.backgroundColor = boardColorChage;\r\n\r\n  boardButtonFake.style.backgroundColor = boardColorChage;\r\n  myBoard.setBoardColor(boardColorChage);\r\n});\r\n\r\nconst eraseButtonClickedInfo = () => {\r\n  const myCanvas = document.getElementById(\"canvas\");\r\n  const ctx = myCanvas.getContext(\"2d\");\r\n\r\n  ctx.clearRect(0, 0, myCanvas.width, myCanvas.height);\r\n\r\n  brushButtonFake.style.backgroundColor = \"#102B5F\";\r\n};\r\n\r\nconst eraseButtonClicked = () => {\r\n  eraseButtonClickedInfo();\r\n  clientSocket.emit(\"eraseButtonPress\", {roomName});\r\n};\r\n\r\neraseButton.addEventListener(\"click\", eraseButtonClicked);\r\n\r\nclientSocket.on(\"eraseButtonDown\", () => {\r\n  eraseButtonClickedInfo();\r\n});\r\n\r\nvar slideButton = document.getElementById(\"slideButton\");\r\nvar canvas = document.getElementById(\"canvas\");\r\n\r\nvar voiceButton = document.getElementById(\"voiceButton\");\r\nvar slideContainer = document.getElementById(\"slideContainer\");\r\nvar my_pdf_viewer = document.getElementById(\"my_pdf_viewer\");\r\nvar drawingBoard = document.getElementById(\"drawingBoard\");\r\n\r\nslideButtonClicked_props = {\r\n  canvasDisplay: \"none\",\r\n  boardButtonFakeDisplay: \"none\",\r\n  brushButtonFakeDisplay: \"none\",\r\n  eraseButtonDisplay: \"none\",\r\n  documentBackgroundColor: \"white\",\r\n  voiceButtonMarginTop: \"-600px\",\r\n  voiceButtonDisplay: \"block\",\r\n  slideContainerDisplay: \"block\",\r\n  slideButtonBackgroundColor: \"#C9C9C9\",\r\n  slideButtonColor: \"white\",\r\n  drawingBoardBackgroundColor: \"white\",\r\n  my_pdf_viewerDisplay: \"block\",\r\n  drawingBoardColor: \"#C9C9C9\",\r\n};\r\n\r\nconst changeProps_slideButtonClicked = () => {\r\n  canvas.style.display = slideButtonClicked_props.canvasDisplay;\r\n  boardButtonFake.style.display = slideButtonClicked_props.boardButtonFakeDisplay;\r\n  brushButtonFake.style.display = slideButtonClicked_props.brushButtonFakeDisplay;\r\n  eraseButton.style.display = slideButtonClicked_props.eraseButtonDisplay;\r\n  document.body.style.backgroundColor = slideButtonClicked_props.documentBackgroundColor;\r\n  voiceButton.style.marginTop = slideButtonClicked_props.voiceButtonMarginTop;\r\n  voiceButton.style.display = slideButtonClicked_props.voiceButtonDisplay;\r\n  slideContainer.style.display = slideButtonClicked_props.slideContainerDisplay;\r\n  slideButton.style.backgroundColor = slideButtonClicked_props.slideButtonBackgroundColor;\r\n  slideButton.style.color = slideButtonClicked_props.slideButtonColor;\r\n  drawingBoard.style.backgroundColor = slideButtonClicked_props.drawingBoardBackgroundColor;\r\n  my_pdf_viewer.style.display = slideButtonClicked_props.my_pdf_viewerDisplay;\r\n  drawingBoard.style.color = slideButtonClicked_props.drawingBoardColor;\r\n};\r\n\r\nslideButton.addEventListener(\"click\", handleSlideButtonClick);\r\n\r\nfunction handleSlideButtonClick() {\r\n  changeProps_slideButtonClicked();\r\n  clientSocket.emit(\"slideButtonClicked\", {\r\n    roomName\r\n  });\r\n}\r\n\r\nclientSocket.on(\"showSlide\", () => {\r\n  changeProps_slideButtonClicked();\r\n});\r\n\r\nboardButtonClicked_props = {\r\n  canvasDisplay: \"block\",\r\n  slideContainerDisplay: \"none\",\r\n  boardButtonFakeDisplay: \"block\",\r\n  brushButtonFakeDisplay: \"block\",\r\n  eraseButtonDisplay: \"block\",\r\n  voiceButtonMarginTop: \"5px\",\r\n\r\n  eraseButtonMarginTop: \"10px\",\r\n  drawingBoardBackgroundColor: \"#C9C9C9\",\r\n  drawingBoardColor: \"white\",\r\n  slideButtonBackgroundColor: \"white\",\r\n  my_pdf_viewerDisplay: \"none\",\r\n  slideButtonColor: \"#C9C9C9\",\r\n};\r\n\r\nconst changeprops_boardButtonClicked = () => {\r\n  canvas.style.display = boardButtonClicked_props.canvasDisplay;\r\n  slideContainer.style.display = boardButtonClicked_props.slideContainerDisplay;\r\n  boardButtonFake.style.display = boardButtonClicked_props.boardButtonFakeDisplay;\r\n  brushButtonFake.style.display = boardButtonClicked_props.brushButtonFakeDisplay;\r\n  eraseButton.style.display = boardButtonClicked_props.eraseButtonDisplay;\r\n  voiceButton.style.marginTop = boardButtonClicked_props.voiceButtonMarginTop;\r\n  eraseButton.style.marginTop = boardButtonClicked_props.eraseButtonMarginTop;\r\n  drawingBoard.style.backgroundColor = boardButtonClicked_props.drawingBoardBackgroundColor;\r\n  drawingBoard.style.color = boardButtonClicked_props.drawingBoardColor;\r\n  slideButton.style.backgroundColor = boardButtonClicked_props.slideButtonBackgroundColor;\r\n  my_pdf_viewer.style.display = boardButtonClicked_props.my_pdf_viewerDisplay;\r\n  slideButton.style.color = boardButtonClicked_props.slideButtonColor;\r\n};\r\n\r\n// [TO do] relocate this line in a decent place\r\nwindow.addEventListener(\"load\", () => {\r\n  changeprops_boardButtonClicked();\r\n});\r\n\r\ndrawingBoard.addEventListener(\"click\", handleBoardButtonClicked);\r\n\r\nfunction handleBoardButtonClicked() {\r\n  changeprops_boardButtonClicked();\r\n  clientSocket.emit(\"boardButtonClicked\", {roomName});\r\n}\r\n\r\nclientSocket.on(\"showBoard\", () => {\r\n  changeprops_boardButtonClicked();\r\n});\r\n\r\nmyBoard.enableEventListeners();\r\nconst mainDrawingLoop = () => {\r\n  if (myBoard.isDrawingPossible) {\r\n    myBrush.drawCircle(myBoard.drawingInfo.currentX, myBoard.drawingInfo.currentY, myBrush.getBrushColor());\r\n\r\n    const combainedDrawingInfo = {\r\n      currentX: myBoard.drawingInfo.currentX,\r\n      currentY: myBoard.drawingInfo.currentY,\r\n      currentColor: myBrush.getBrushColor(),\r\n      roomName\r\n    };\r\n\r\n    myBoard._updateBoardColor(myBoard.getBoardColor());\r\n    const drawingBoardColor = {\r\n      currentBoardColor: myBoard.getBoardColor(),\r\n      roomName\r\n    };\r\n\r\n    clientSocket.emit(\"someoneColoringBoard\", drawingBoardColor);\r\n\r\n\r\n    clientSocket.emit(\"somebodyIsDrawing\", combainedDrawingInfo);\r\n  }\r\n  requestAnimationFrame(mainDrawingLoop);\r\n};\r\nmainDrawingLoop();\r\n\r\nconst otherClientBoard = new Board(drawingCanvas, 500, 400, \"white\");\r\nclientSocket.on(\"serverEmittingBoardColor\", (receivedBoardColorInfo) => {\r\n  console.log(receivedBoardColorInfo);\r\n\r\n  otherClientBoard._updateBoardColor(receivedBoardColorInfo.currentBoardColor);\r\n});\r\n\r\nconst otherClientBrush = new Brush(4, \"green\", \"pencil\", myBoard.getCanvas());\r\nclientSocket.on(\"serveremittedDrawingInfo\", (receivedDrawingInfo) => {\r\n  console.log(\"to see the color of the brush\\n\");\r\n  console.log(receivedDrawingInfo);\r\n  otherClientBrush.drawCircle(\r\n    receivedDrawingInfo.currentX,\r\n    receivedDrawingInfo.currentY,\r\n    receivedDrawingInfo.currentColor\r\n  );\r\n});\r\n","\r\nclass Brush {\r\n    constructor(brushSize, brushColor, brushType, canvas) {\r\n        this.brushSize = brushSize;\r\n        this.brushColor = brushColor;\r\n        this.brushType = brushType;\r\n        this.canvas = canvas;\r\n    }\r\n\r\n    getBrushSize() {\r\n        return this.brushSize;\r\n    }\r\n    setBrushSize(newSize) {\r\n        this.brushSize = newSize;\r\n    }\r\n    getBrushColor() {\r\n        return this.brushColor;\r\n    }\r\n    setBrushColor(newColor) {\r\n        this.brushColor = newColor;\r\n    }\r\n    drawLine() {\r\n        console.log(\"line tana hocche\");\r\n        \r\n    }\r\n    drawCircle(x, y, color) {\r\n        const ctx = this.canvas.getContext(\"2d\")\r\n        ctx.beginPath();\r\n        ctx.arc(x, y, this.brushSize, 0, 2 * Math.PI);\r\n        ctx.strokeStyle = color;\r\n        ctx.stroke();\r\n        ctx.fillStyle = color;\r\n        ctx.fill();\r\n\r\n\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    Brush: Brush\r\n}\r\n\r\n/*\r\n    // properties\r\n        brushSize: number       radius of the brush tip\r\n        brushColor: String      color that the brush will paint with\r\n\r\n        to implement later\r\n        brushType: string       whether the brushstrokes looks like a pen, pencil, marker, paintbrush\r\n\r\n    // functionality\r\n        drawLine\r\n        drawCircle\r\n\r\n    // test code\r\n        const kashemBrush = new Brush(10, 'orange', 'fountainPen')\r\n        kashemBrush.drawCircle()\r\n        kashemBrush.setBrushSize(50)\r\n*/\r\n\r\n","class Board {\r\n    constructor(canvas, boardWidth, boardHeight, boardColor) {\r\n        this.boardWidth = boardWidth;\r\n        this.boardHeight = boardHeight;\r\n        this.canvas = canvas;\r\n        this.boardColor = boardColor;\r\n        this.isDrawingPossible = false;\r\n        this.drawingInfo = {\r\n            currentX: 0,\r\n            currentY: 0,\r\n        }\r\n\r\n        this._updateBoardColor(this.boardColor)\r\n\r\n        this.fitCanvasToParent();\r\n        \r\n    }\r\n\r\n    getCanvas(){\r\n        return this.canvas;\r\n    }\r\n\r\n    getBoardColor(){\r\n        return this.boardColor;\r\n    }\r\n\r\n    setBoardColor(newBoardColor){\r\n        this.boardColor = newBoardColor;\r\n        this._updateBoardColor(this.boardColor)\r\n    }\r\n    \r\n    _updateBoardColor(newColor){\r\n        this.canvas.style.backgroundColor = newColor\r\n        \r\n    }\r\n\r\n    fitCanvasToParent(){\r\n        this.getCanvas().width = this.getCanvas().parentElement.offsetWidth-50;\r\n        this.getCanvas().height = this.getCanvas().parentElement.offsetHeight-50;\r\n    }\r\n\r\n    enableEventListeners() {\r\n        let isMouseMoving = false;\r\n        let isMouseDown = false;\r\n        const decideIsDrawingPossible = () => {\r\n            if(isMouseDown && isMouseMoving){\r\n                this.isDrawingPossible = true;\r\n            } else {\r\n                this.isDrawingPossible = false;\r\n            }\r\n        }\r\n\r\n        // handling mousedown events\r\n        this.canvas.addEventListener(\"mousedown\", (e) => {\r\n            isMouseDown = true;\r\n            decideIsDrawingPossible();\r\n            this.drawingInfo.currentX = e.offsetX;\r\n            this.drawingInfo.currentY = e.offsetY;\r\n        })\r\n        \r\n        // handling mousemove\r\n        this.canvas.addEventListener(\"mousemove\", (e) => {\r\n            isMouseMoving = true;\r\n            decideIsDrawingPossible();\r\n            this.drawingInfo.currentX = e.offsetX;\r\n            this.drawingInfo.currentY = e.offsetY;\r\n            \r\n        })\r\n        \r\n        // handling mouseup events\r\n        this.canvas.addEventListener(\"mouseup\", (e) => {\r\n            isMouseDown = false;\r\n            decideIsDrawingPossible();\r\n        })\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    Board: Board\r\n}"],"sourceRoot":""}